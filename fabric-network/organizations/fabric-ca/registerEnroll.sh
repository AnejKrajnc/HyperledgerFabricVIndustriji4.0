#! /bin/bash
# Creating proizvodnja2 CA'sfunction createproizvodnja2() {
function createproizvodnja2() {
CA_CLIENT_ADDRESS=ca.proizvodnja2.dpp.podjetje.si
CLIENT_ADDRESS=proizvodnja2.dpp.podjetje.si
CLIENT_NAME=proizvodnja2
CA_CLIENT_NAME=ca-proizvodnja2
CA_CLIENT_CERT=ca-proizvodnja2-dpp-podjetje-si-7054-ca-proizvodnja2
NETWORK=fabric_test

  echo "Enrolling the CA admin"

  mkdir -p organizations/peerOrganizations/${CLIENT_ADDRESS}/msp

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/

  fabric-ca-client enroll -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --caname $CA_CLIENT_NAME --tls.certfiles "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem"

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/tlsca"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/tlsca/tlsca.${CLIENT_ADDRESS}-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/ca"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/ca/${CA_CLIENT_ADDRESS}-cert.pem"

  echo "Registering peer0"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering peer1"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

    echo "Registering peer2"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name peer2 --id.secret peer2pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering user"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

   echo "Registering vlivni_stroj user"
   fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name vlivnistroj --id.secret vlivnistrojpw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

   echo "Registering oblikovalni_stroj user"
   fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name obnlikovnistroj --id.secret obnlikovnistrojpw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering the org admin"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name ${CLIENT_NAME}admin --id.secret ${CLIENT_NAME}adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Generating the peer0 msp"
  fabric-ca-client enroll -u https://peer0:peer0pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/msp" --csr.hosts peer0.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/msp/config.yaml"

  echo "Generating the peer0-tls certificates"
  fabric-ca-client enroll -u https://peer0:peer0pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls" --enrollment.profile tls --csr.hosts peer0.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/keystore/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/server.key"

  echo "Generating the peer1 msp"
  fabric-ca-client enroll -u https://peer1:peer1pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/msp" --csr.hosts peer1.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/msp/config.yaml"

  echo "Generating the peer1-tls certificates"
  fabric-ca-client enroll -u https://peer1:peer1pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/tls" --enrollment.profile tls --csr.hosts peer1.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/tls/keystore/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer1.${CLIENT_ADDRESS}/tls/server.key"

  echo "Generating the peer2 msp"
  fabric-ca-client enroll -u https://peer2:peer2pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/msp" --csr.hosts peer2.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/msp/config.yaml"

  echo "Generating the peer2-tls certificates"
  fabric-ca-client enroll -u https://peer2:peer2pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/tls" --enrollment.profile tls --csr.hosts peer2.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/tls/keystore/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer2.${CLIENT_ADDRESS}/tls/server.key"

  echo "Generating the user msp"
  fabric-ca-client enroll -u https://user1:user1pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/User1@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Generating the vlivni_stroj user msp"
  fabric-ca-client enroll -u https://vlivnistroj:vlivnistrojpw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/VlivniStroj@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Generating the oblikovalni_stroj user msp"
  fabric-ca-client enroll -u https://obnlikovnistroj:obnlikovnistrojpw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/OblikovniStroj@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/User1@${CLIENT_ADDRESS}/msp/config.yaml"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/VlivniStroj@${CLIENT_ADDRESS}/msp/config.yaml"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/OblikovniStroj@${CLIENT_ADDRESS}/msp/config.yaml"

  echo "Generating the org admin msp"
  fabric-ca-client enroll -u https://${CLIENT_NAME}admin:${CLIENT_NAME}adminpw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/Admin@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/Admin@${CLIENT_ADDRESS}/msp/config.yaml"
}
# Creating proizvodnja1 CA's
function createproizvodnja1() {
CA_CLIENT_ADDRESS=ca.proizvodnja1.dpp.podjetje.si
CLIENT_ADDRESS=proizvodnja1.dpp.podjetje.si
CLIENT_NAME=proizvodnja1
CA_CLIENT_NAME=ca-proizvodnja1
CA_CLIENT_CERT=ca-proizvodnja1-dpp-podjetje-si-7054-ca-proizvodnja1

  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/${CLIENT_ADDRESS}/msp

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/

  fabric-ca-client enroll -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --caname $CA_CLIENT_NAME --tls.certfiles "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem"

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/tlsca"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/tlsca/tlsca.${CLIENT_ADDRESS}-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/ca"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/ca/${CA_CLIENT_ADDRESS}-cert.pem"

  echo "Registering peer0"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering user"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering vlivni_stroj user"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name vlivnistroj --id.secret vlivnistrojpw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering oblikovalni_stroj user"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name obnlikovnistroj --id.secret obnlikovnistrojpw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering the org admin"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name ${CLIENT_NAME}admin --id.secret ${CLIENT_NAME}adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Generating the peer0 msp"
  fabric-ca-client enroll -u https://peer0:peer0pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/msp" --csr.hosts peer0.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/msp/config.yaml"

  echo "Generating the peer0-tls certificates"
  fabric-ca-client enroll -u https://peer0:peer0pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls" --enrollment.profile tls --csr.hosts peer0.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/keystore/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/server.key"

  echo "Generating the user msp"
  fabric-ca-client enroll -u https://user1:user1pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/User1@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Generating the vlivni_stroj user msp"
  fabric-ca-client enroll -u https://vlivnistroj:vlivnistrojpw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/VlivniStroj@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Generating the oblikovalni_stroj user msp"
  fabric-ca-client enroll -u https://obnlikovnistroj:obnlikovnistrojpw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/OblikovniStroj@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/User1@${CLIENT_ADDRESS}/msp/config.yaml"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/VlivniStroj@${CLIENT_ADDRESS}/msp/config.yaml"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/OblikovniStroj@${CLIENT_ADDRESS}/msp/config.yaml"

  echo "Generating the org admin msp"
  fabric-ca-client enroll -u https://${CLIENT_NAME}admin:${CLIENT_NAME}adminpw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/Admin@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/Admin@${CLIENT_ADDRESS}/msp/config.yaml"
}
# Creating nadzor CA's
function createnadzor() {
CA_CLIENT_ADDRESS=ca.nadzor.dpp.podjetje.si
CLIENT_ADDRESS=nadzor.dpp.podjetje.si
CLIENT_NAME=nadzor
CA_CLIENT_NAME=ca-nadzor
CA_CLIENT_CERT=ca-nadzor-dpp-podjetje-si-7054-ca-nadzor

  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/${CLIENT_ADDRESS}/msp

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/

  fabric-ca-client enroll -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --caname $CA_CLIENT_NAME --tls.certfiles "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem"

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/tlsca"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/tlsca/tlsca.${CLIENT_ADDRESS}-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/ca"
  cp "${PWD}/organizations/fabric-ca/$CLIENT_NAME/ca-cert.pem" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/ca/${CA_CLIENT_ADDRESS}-cert.pem"

  echo "Registering peer0"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering user"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering supervisor user"
    fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name supervisor --id.secret supervisorpw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Registering the org admin"
  fabric-ca-client register --caname ca-${CLIENT_NAME} -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:7054 --id.name ${CLIENT_NAME}admin --id.secret ${CLIENT_NAME}adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  echo "Generating the peer0 msp"
  fabric-ca-client enroll -u https://peer0:peer0pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/msp" --csr.hosts peer0.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/msp/config.yaml"

  echo "Generating the peer0-tls certificates"
  fabric-ca-client enroll -u https://peer0:peer0pw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls" --enrollment.profile tls --csr.hosts peer0.${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/keystore/"* "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/peers/peer0.${CLIENT_ADDRESS}/tls/server.key"

  echo "Generating the user msp"
  fabric-ca-client enroll -u https://supervisor:supervisorpw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/Supervisor@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/User1@${CLIENT_ADDRESS}/msp/config.yaml"

  echo "Generating the org admin msp"
  fabric-ca-client enroll -u https://${CLIENT_NAME}admin:${CLIENT_NAME}adminpw@${CA_CLIENT_ADDRESS}:7054 --caname ca-${CLIENT_NAME} -M "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/Admin@${CLIENT_ADDRESS}/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/${CLIENT_NAME}/ca-cert.pem"

  cp "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/msp/config.yaml" "${PWD}/organizations/peerOrganizations/${CLIENT_ADDRESS}/users/Admin@${CLIENT_ADDRESS}/msp/config.yaml"
}
# Creating Orderer CA's
function createOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/dpp.podjetje.si/msp

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/dpp.podjetje.si
  CA_CLIENT_ADDRESS=ca.orderer.dpp.podjetje.si
  CLIENT_ADDRESS=orderer.dpp.podjetje.si
  CLIENT_NAME=orderer
  CA_CLIENT_NAME=ca-orderer
  CA_CLIENT_CERT=ca-orderer-dpp-podjetje-si-9054-ca-orderer

  fabric-ca-client enroll -u https://admin:adminpw@${CA_CLIENT_ADDRESS}:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/'$CA_CLIENT_CERT'.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/msp/tlscacerts/tlsca.dpp.podjetje.si-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/tlsca/tlsca.dpp.podjetje.si-cert.pem"

  echo "Registering orderer"
  fabric-ca-client register --caname ca-orderer -u https://orderer:ordererpw@${CA_CLIENT_ADDRESS}:9054 --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  echo "Registering the orderer admin"
  fabric-ca-client register --caname ca-orderer -u https://orderer:ordererpw@${CA_CLIENT_ADDRESS}:9054 --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  echo "Generating the orderer msp"
  fabric-ca-client enroll -u https://orderer:ordererpw@${CA_CLIENT_ADDRESS}:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/${CLIENT_ADDRESS}/msp" --csr.hosts ${CLIENT_ADDRESS} --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  cp "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/msp/config.yaml"

  echo "Generating the orderer-tls certificates"
  fabric-ca-client enroll -u https://orderer:ordererpw@${CA_CLIENT_ADDRESS}:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/tls" --enrollment.profile tls --csr.hosts orderer.dpp.podjetje.si --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/orderers/orderer.dpp.podjetje.si/msp/tlscacerts/tlsca.dpp.podjetje.si-cert.pem"

  echo "Generating the admin msp"
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@${CA_CLIENT_ADDRESS}:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/users/Admin@dpp.podjetje.si/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"

  cp "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/dpp.podjetje.si/users/Admin@dpp.podjetje.si/msp/config.yaml"
}